{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Haku.js","services/personfactory.js","components/Ilmoitus.js","App.js","index.js"],"names":["Remove","props","react_default","a","createElement","onClick","handleRemove","Person","person","name","number","Persons_Remove","id","Persons","hakusana","haku","renderoitava","persons","filter","toLowerCase","startsWith","map","Persons_Person","key","PersonForm","Fragment","onSubmit","addPerson","value","newName","onChange","handleNameInput","newNumber","handleNumberInput","type","handleUpdate","Haku","newHaku","handleHakuInput","baseUrl","personfactory","axios","get","newObject","post","put","concat","then","response","data","delete","Ilmoitus","_ref","viesti","tyyppi","className","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewHaku","_useState9","_useState10","uusiPalaute","setUusiPalaute","_useState11","_useState12","uusiVirhe","setUusiVirhe","useEffect","console","log","components_Ilmoitus","components_Haku","event","target","components_PersonForm","preventDefault","nimi","setTimeout","catch","error","personToUpdate","find","updatedPerson","objectSpread","returnedPerson","components_Persons","window","confirm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.20c3900f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Remove = (props) => {\r\n  return (\r\n  <button onClick={props.handleRemove}>Poista</button>\r\n  )\r\n}\r\n\r\nconst Person = props => {\r\n  return (\r\n    <p>\r\n      {props.person.name} <br/>\r\n      {props.person.number} <br/>\r\n      <Remove\r\n      handleRemove={() => props.handleRemove(props.person.id)}/>\r\n    </p>\r\n  )\r\n}\r\n\r\nconst Persons = (props) => {\r\n  const hakusana = props.haku\r\n  let renderoitava = props.persons\r\n  if (hakusana !== '') {\r\n  renderoitava = props.persons.filter(person => person.name.toLowerCase().startsWith(hakusana.toLowerCase()))\r\n  }\r\n  return (\r\n  renderoitava.map(person =>\r\n    <Person\r\n      key={person.id}\r\n      person={person}\r\n      handleRemove={props.handleRemove} />\r\n  )\r\n  )\r\n  \r\n}\r\n\r\n\r\nexport default Persons","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <>\r\n    <form onSubmit={props.addPerson}>\r\n      <table>\r\n        <tbody>\r\n        <tr>\r\n          <td>Nimi:</td><td><input value={props.newName} onChange={props.handleNameInput} /></td>\r\n        </tr>\r\n        <tr>\r\n          <td>Puhelin:</td><td><input value={props.newNumber} onChange={props.handleNumberInput} /></td>\r\n        </tr>\r\n        <tr>\r\n          <td><button type=\"submit\">Lisää</button></td><td></td>\r\n        </tr>\r\n        </tbody>\r\n        </table>\r\n    </form>\r\n    <button onClick={props.handleUpdate}>Vaihda numero</button>\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react';\r\n\r\nconst Haku = (props) => {\r\n    return (\r\n        <p>\r\n            Haku: <input value={props.newHaku} onChange={props.handleHakuInput} />\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Haku\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    remove\r\n}","import React from 'react';\r\n\r\nconst Ilmoitus = ({ viesti, tyyppi }) => {\r\n    if (viesti === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div id=\"overlay\">\r\n            <div className={tyyppi}>\r\n                {viesti}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Ilmoitus","import React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport PersonForm from './components/PersonForm';\nimport Haku from './components/Haku';\nimport personfactory from './services/personfactory';\nimport Ilmoitus from './components/Ilmoitus';\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('Nimi')\n  const [newNumber, setNewNumber] = useState('Puhelinnumero')\n  const [newHaku, setNewHaku] = useState('')\n  const [uusiPalaute, setUusiPalaute] = useState(null)\n  const [uusiVirhe, setUusiVirhe] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personfactory\n      .getAll()\n      .then(response => {\n        console.log('promise fullfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    const nimi = newName\n\n    personfactory\n      .create(personObject)\n      .then(response => {\n        console.log(response)\n        setPersons(persons.concat(response.data))\n        setUusiPalaute(`${nimi} lisättiin puhelinluetteloon.`)\n        setTimeout(() => {\n          setUusiPalaute(null)\n        }, 5000)\n      })\n      .catch(error => {\n        personfactory\n          .getAll()\n          .then(response => {\n            setPersons(response.data)\n          })\n        setUusiVirhe(error.response.data.error)\n        setTimeout(() => {\n          setUusiVirhe(null)\n        }, 5000)\n      })\n\n    setNewName('Nimi')\n    setNewNumber('Puhelinnumero')\n  }\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleHakuInput = (event) => {\n    setNewHaku(event.target.value)\n  }\n\n  const handleRemove = (id) => {\n    console.log(`id: ${id}`)\n    if (window.confirm('Poistetaanko yhteystieto?')) {\n      personfactory\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          setUusiPalaute('Poisto onnistui.')\n          setTimeout(() => {\n            setUusiPalaute(null)\n          }, 5000)\n        }\n        )\n        .catch(error => {\n          setUusiVirhe(error.response.data.error)\n          setTimeout(() => {\n            setUusiVirhe(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleUpdate = () => {\n    try {\n      const personToUpdate = persons.find(person => person.name === newName)\n      const updatedPerson = { ...personToUpdate, number: newNumber }\n\n      personfactory\n        .update(personToUpdate.id, updatedPerson)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => person.id !== personToUpdate.id ? person : returnedPerson))\n          setUusiPalaute(`Henkilön ${newName} puhelinnumero vaihdettiin.`)\n          setNewName('Nimi')\n          setNewNumber('Puhelinnumero')\n          setTimeout(() => {\n            setUusiPalaute(null)\n          }, 5000)\n        })\n        .catch(error => {\n          personfactory\n            .getAll()\n            .then(response => {\n              setPersons(response.data)\n            })\n          setUusiVirhe(error.response.data.error)\n          setTimeout(() => {\n            setUusiVirhe(null)\n          }, 5000)\n          setNewName('Nimi')\n          setNewNumber('Puhelinnumero')\n        })\n    } catch (error) {\n      console.log('Jotain meni pieleen.')\n    }\n  }\n\n  return (\n    <div>\n      <h1>Puhelinluettelo</h1>\n      <Ilmoitus viesti={uusiPalaute} tyyppi=\"palaute\" />\n      <Ilmoitus viesti={uusiVirhe} tyyppi=\"virhe\" />\n      <div>\n        <Haku newHaku={newHaku} handleHakuInput={handleHakuInput} />\n      </div>\n      <h2>Lisää uusi henkilö luetteloon</h2>\n      <div>\n        <PersonForm\n          addPerson={addPerson}\n          newName={newName}\n          handleNameInput={handleNameInput}\n          newNumber={newNumber}\n          handleNumberInput={handleNumberInput}\n          handleUpdate={handleUpdate}\n        />\n      </div>\n      <h2>Numerot</h2>\n      <div>\n        <Persons haku={newHaku} persons={persons} handleRemove={handleRemove} />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}